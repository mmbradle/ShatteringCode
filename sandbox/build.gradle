apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

sourceCompatibility = 1.6

buildscript {
    apply from: 'https://github.com/valkolovos/gradle_cobertura/raw/master/repo/gradle_cobertura/gradle_cobertura/1.0/coberturainit.gradle'
}

repositories {
    mavenCentral()
    maven {
        //        url 'http://localhost:8089/artifactory/plugins-release'
        url 'http://localhost:8088/nexus/content/groups/public'
    }
   	maven {
		url 'http://pecia.sourceforge.net/repository'
	}
	maven {
		url 'http://snapshots.repository.codehaus.org'
	}
}

dependencies {
    compile 'com.google.guava:guava:14.0.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.1.1'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'com.lexicalscope.jewelcli', name: 'jewelcli', version: '0.8.3'
    compile group: 'org.javatuples', name: 'javatuples', version: '1.2'
    compile 'org.codehaus.preon:preon-binding:1.1-SNAPSHOT'
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-io:commons-io:2.4'
    //compile 'commons-lang:commons-lang:2.2'
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
            exclude '**/*Test.java'
        }
        resources {
			srcDir 'res'
		}
        output.classesDir = file("$buildDir/classes")
    }
    test {
        java {
            srcDirs = ['src']
            include '**/*Test.java'
        }
        resources {
            srcDir 'res'
        }
        output.classesDir = file("$buildDir/test-classes")
    }
}


// The following ensures that Eclipse uses only one src directory
eclipse {
    classpath {
        file {
            //closure executed after .classpath content is loaded from existing file
            //and after gradle build information is merged
            whenMerged { classpath ->
                classpath.entries.removeAll { entry -> entry.kind == 'src'}
                def srcEntry = new org.gradle.plugins.ide.eclipse.model.SourceFolder('src', null)
                srcEntry.dir = file("$projectDir/src")
                classpath.entries.add( srcEntry )
            }
        }
    }
}

project.findbugs.ignoreFailures = true
project.checkstyle.ignoreFailures = true
project.checkstyle.configFile = new File("$projectDir/config", "checkstyle.xml")

cobertura {
    coverageSourceDirs = ['src', file("$projectDir/src")]
    coverageDirs = [file("$projectDir/build/classes")]
}
